import type { NextPage } from 'next'
import Head from 'next/head'
import { AppTitle, BodyWrapper } from 'components/style'
import TotalSaldoComponent from 'components/TotalSaldoComponent'
import Box from '@mui/material/Box'
import TabKantong from 'components/TabKantong'
import BannerPengeluaran from 'components/BannerPengeluaran'
import { useEffect, useState } from 'react'
import ACTIONS from 'store/registerActions'
import { useDispatch, useSelector } from 'react-redux'
import Cookie from 'js-cookie'
import { useRouter } from 'next/router'
// import { db } from 'services/firebase-client'
// import { collection, onSnapshot } from 'firebase/firestore'

const Home: NextPage = () => {
  const dispatch = useDispatch()
  const router = useRouter()
  const { incomes, kantong } = useSelector((state: any) => state.incomes)

  const [listKantong, setListKantong] = useState<Array<any>>([])
  const [totalSaldo, setTotalSaldo] = useState(0)

  // const kantongRef = collection(db, 'kantong')

  // useEffect(() => {
    // const unsubscribe = onSnapshot(kantongRef, (querySnapshot) => {
    //   dispatch(ACTIONS.incomes.getSummaryIncomes())
    //   console.log('listen')
    // });
    // dispatch(ACTIONS.incomes.getSummaryIncomes())
    
  // }, [])

  useEffect(() => {
    const fetchTest = async () => {
      const res = await fetch('/api/user-profile', {
        headers: {
          Authorization: 'Bearer ' + Cookie.get('AuthToken'),
        }
      })
      const data = await res.json()
      console.log('fetch test', data)
    }
    fetchTest()
  }, [])

  useEffect(() => {
    if (Cookie.get('AuthToken')) {
      dispatch(ACTIONS.incomes.getIncomes())
      dispatch(ACTIONS.incomes.getKantong())
    } else {
      router.push(`/login?redirect=${router.asPath}`)
    }
  }, []);

  useEffect(() => {
    let _listKantong: Array<any> = []
    kantong.forEach((item: any) => {
      let total: number = 0
      incomes.forEach((income: any) => {
        if (income.kantong.id === item.id) {
          total += income.value
        }
      })
      _listKantong.push({
        ...item,
        amount: total,
      })
    })
    setListKantong(_listKantong)
  }, [kantong, incomes])

  useEffect(() => {
    let totalSaldo: number = 0
    incomes.forEach((income: any) => {
      totalSaldo += income.value
    })
    setTotalSaldo(totalSaldo)
  }, [incomes])

  return (
    <BodyWrapper pt="24px" pb="72px" px="12px">
      <Head>
        <title>My Finance Application</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AppTitle mb="62px">
        <h3>My Finance Application</h3>
      </AppTitle>

      <TotalSaldoComponent amount={totalSaldo} />
      <TabKantong list={listKantong} />
      <BannerPengeluaran />
    </BodyWrapper>
  )
}

export default Home
